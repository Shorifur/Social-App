{"version":3,"file":"static/js/390.be7f61da.chunk.js","mappings":"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","sources":["api/axios.js","pages/Register.js","hooks/useAuth.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\n// Request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;","// client/src/pages/Register.js\r\nimport { useState } from 'react';\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport axios from '../api/axios';\r\nimport { toast } from 'react-toastify'; // ✅ Toast notifications\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  InputAdornment,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { Person, Email, Phone, Lock, Visibility, VisibilityOff } from '@mui/icons-material';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    gender: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    showPassword: false\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setFormData({ ...formData, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.confirmPassword) {\r\n      toast.error(\"❌ Passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post('/auth/register', {\r\n        firstName: formData.firstName,\r\n        lastName: formData.lastName,\r\n        email: formData.email,\r\n        phone: formData.phone,\r\n        gender: formData.gender,\r\n        password: formData.password\r\n      });\r\n\r\n      if (response.data.status === 'success') {\r\n        login(response.data.data.user, response.data.token);\r\n        toast.success('✅ Registration successful!');\r\n        navigate('/dashboard', { replace: true });\r\n      }\r\n    } catch (err) {\r\n      console.error('❌ Registration error:', err);\r\n      toast.error(err.response?.data?.message || 'Registration failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 8, p: 4, boxShadow: 3, borderRadius: 2 }}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Create Account\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {/* First Name */}\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"First Name\"\r\n                value={formData.firstName}\r\n                onChange={handleChange('firstName')}\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Person fontSize=\"small\" />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            {/* Last Name */}\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last Name\"\r\n                value={formData.lastName}\r\n                onChange={handleChange('lastName')}\r\n                required\r\n              />\r\n            </Grid>\r\n\r\n            {/* Email */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange('email')}\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Email fontSize=\"small\" />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            {/* Phone */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                value={formData.phone}\r\n                onChange={handleChange('phone')}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Phone fontSize=\"small\" />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            {/* Gender */}\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Gender</InputLabel>\r\n                <Select\r\n                  value={formData.gender}\r\n                  onChange={handleChange('gender')}\r\n                  label=\"Gender\"\r\n                >\r\n                  <MenuItem value=\"male\">Male</MenuItem>\r\n                  <MenuItem value=\"female\">Female</MenuItem>\r\n                  <MenuItem value=\"other\">Other</MenuItem>\r\n                  <MenuItem value=\"prefer-not-to-say\">Prefer not to say</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* Password */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type={formData.showPassword ? 'text' : 'password'}\r\n                value={formData.password}\r\n                onChange={handleChange('password')}\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Lock fontSize=\"small\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <IconButton\r\n                      type=\"button\"\r\n                      onClick={() =>\r\n                        setFormData({ ...formData, showPassword: !formData.showPassword })\r\n                      }\r\n                    >\r\n                      {formData.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  )\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            {/* Confirm Password */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                value={formData.confirmPassword}\r\n                onChange={handleChange('confirmPassword')}\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Lock fontSize=\"small\" />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2, py: 1.5 }}\r\n            disabled={loading}\r\n            startIcon={loading && <CircularProgress size={20} />}\r\n          >\r\n            {loading ? 'Creating Account...' : 'Register'}\r\n          </Button>\r\n\r\n          <Typography align=\"center\">\r\n            Already have an account?{' '}\r\n            <RouterLink to=\"/login\" style={{ fontWeight: 'bold', textDecoration: 'none' }}>\r\n              Sign In\r\n            </RouterLink>\r\n          </Typography>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","// client/src/hooks/useAuth.js\r\nimport { useState, useEffect, createContext, useContext } from 'react';\r\nimport { authAPI } from '../api/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Check authentication status on mount\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const userData = await authAPI.getCurrentUser(token);\r\n        setUser(userData);\r\n      }\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await authAPI.login(credentials);\r\n\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        setUser(response.user);\r\n        return { success: true };\r\n      } else {\r\n        const msg = response.message || 'Login failed';\r\n        setError(msg);\r\n        return { success: false, error: msg };\r\n      }\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || 'Login failed';\r\n      setError(msg);\r\n      return { success: false, error: msg };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await authAPI.register(userData);\r\n\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        setUser(response.user);\r\n        return { success: true };\r\n      } else {\r\n        const msg = response.message || 'Registration failed';\r\n        setError(msg);\r\n        return { success: false, error: msg };\r\n      }\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || 'Registration failed';\r\n      setError(msg);\r\n      return { success: false, error: msg };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        checkAuthStatus,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to access auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":["axiosInstance","axios","create","baseURL","process","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","Register","formData","setFormData","useState","firstName","lastName","email","phone","gender","password","confirmPassword","showPassword","loading","setLoading","login","useAuth","navigate","useNavigate","handleChange","prop","event","_objectSpread","target","value","_jsx","Container","maxWidth","children","_jsxs","Box","sx","mt","p","boxShadow","borderRadius","Typography","variant","align","gutterBottom","onSubmit","async","e","preventDefault","post","data","user","toast","success","replace","err","_err$response","_err$response$data","console","message","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","onChange","required","InputProps","startAdornment","InputAdornment","position","Person","fontSize","type","Email","Phone","FormControl","InputLabel","Select","MenuItem","Lock","endAdornment","IconButton","onClick","VisibilityOff","Visibility","Button","mb","py","disabled","startIcon","CircularProgress","size","RouterLink","to","style","fontWeight","textDecoration","AuthContext","createContext","context","useContext","Error"],"sourceRoot":""}