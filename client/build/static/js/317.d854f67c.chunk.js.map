{"version":3,"file":"static/js/317.d854f67c.chunk.js","mappings":"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","sources":["pages/Feed.js","api/posts.js","api/axios.js","api/base.js","api/reactions.js","components/PostCard.js","components/CreatePost.js","hooks/useAuth.js"],"sourcesContent":["// In client/src/pages/Feed.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getFeedPosts } from '../api/posts';\r\nimport PostCard from '../components/PostCard';\r\nimport CreatePost from '../components/CreatePost';\r\n\r\nconst Feed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadFeedPosts();\r\n  }, []);\r\n\r\n  const loadFeedPosts = async (pageNum = 1) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getFeedPosts(pageNum);\r\n      \r\n      if (pageNum === 1) {\r\n        setPosts(response.posts);\r\n      } else {\r\n        setPosts(prev => [...prev, ...response.posts]);\r\n      }\r\n      \r\n      setHasMore(response.hasMore);\r\n      setPage(pageNum);\r\n    } catch (error) {\r\n      setError('Failed to load feed');\r\n      console.error('Feed loading error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleNewPost = (newPost) => {\r\n    setPosts(prev => [newPost, ...prev]);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    if (hasMore && !loading) {\r\n      loadFeedPosts(page + 1);\r\n    }\r\n  };\r\n\r\n  if (loading && page === 1) {\r\n    return <div className=\"loading\">Loading feed...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"feed-page\">\r\n      <div className=\"container\">\r\n        <div className=\"feed-content\">\r\n          <CreatePost onPostCreated={handleNewPost} />\r\n          \r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n          <div className=\"posts-list\">\r\n            {posts.length === 0 ? (\r\n              <div className=\"empty-feed\">\r\n                <h3>Your feed is empty</h3>\r\n                <p>Follow some users to see their posts here</p>\r\n              </div>\r\n            ) : (\r\n              posts.map(post => (\r\n                <PostCard key={post._id} post={post} />\r\n              ))\r\n            )}\r\n          </div>\r\n          \r\n          {hasMore && (\r\n            <button \r\n              onClick={handleLoadMore} \r\n              disabled={loading}\r\n              className=\"load-more-btn\"\r\n            >\r\n              {loading ? 'Loading...' : 'Load More'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;","// client/src/api/posts.js\r\nimport api from './base';\r\n\r\n\r\n// ===============================\r\n// Feed & User Posts\r\n// ===============================\r\nexport const getFeedPosts = async (page = 1, limit = 10) => {\r\n  const response = await api.get(`/social/posts/feed?page=${page}&limit=${limit}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getUserPosts = async (userId, page = 1, limit = 10) => {\r\n  const response = await api.get(`/social/posts/user/${userId}?page=${page}&limit=${limit}`);\r\n  return response.data;\r\n};\r\n\r\n// ===============================\r\n// Create Post\r\n// ===============================\r\nexport const createPost = async (postData) => {\r\n  const response = await api.post('/social/posts', postData);\r\n  return response.data;\r\n};\r\n\r\n// ===============================\r\n// Likes\r\n// ===============================\r\nexport const likePost = async (postId) => {\r\n  const response = await api.post(`/social/posts/${postId}/like`);\r\n  return response.data;\r\n};\r\n\r\nexport const unlikePost = async (postId) => {\r\n  const response = await api.post(`/social/posts/${postId}/unlike`);\r\n  return response.data;\r\n};\r\n\r\n// (Optional) Toggle like in one endpoint (if backend supports it)\r\n// export const toggleLike = async (postId) => {\r\n//   const response = await api.post(`/posts/${postId}/like`);\r\n//   return response.data;\r\n// };\r\n\r\n// ===============================\r\n// Comments\r\n// ===============================\r\nexport const addComment = async (postId, content) => {\r\n  const response = await api.post(`/social/posts/${postId}/comments`, { content });\r\n  return response.data;\r\n};\r\n\r\n// ===============================\r\n// Delete Post\r\n// ===============================\r\nexport const deletePost = async (postId) => {\r\n  const response = await api.delete(`/social/posts/${postId}`);\r\n  return response.data;\r\n};\r\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\n// Request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;","// client/src/api/base.js\r\nimport axios from 'axios';\r\n\r\n// Create a base axios instance with default config\r\nconst baseAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\nbaseAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle common errors\r\nbaseAxios.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default baseAxios;","// client/src/api/reactions.js\r\nimport axiosInstance from './base'; // Use the base Axios instance\r\n\r\n// Add reaction to a post\r\nexport const reactToPost = async (postId, reactionType) => {\r\n  try {\r\n    const response = await axiosInstance.post(`/api/posts/${postId}/reactions`, {\r\n      type: reactionType\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Remove reaction from a post\r\nexport const removeReaction = async (postId) => {\r\n  try {\r\n    const response = await axiosInstance.delete(`/api/posts/${postId}/reactions`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get reactions for a post\r\nexport const getPostReactions = async (postId) => {\r\n  try {\r\n    const response = await axiosInstance.get(`/api/posts/${postId}/reactions`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get all reactions of a specific user\r\nexport const getUserReactions = async (userId) => {\r\n  try {\r\n    const response = await axiosInstance.get(`/api/users/${userId}/reactions`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get the current user's reaction to a specific post\r\nexport const getUserReaction = async (postId) => {\r\n  try {\r\n    const response = await axiosInstance.get(`/api/posts/${postId}/reactions/me`);\r\n    return response.data;\r\n  } catch (error) {\r\n    // If the user hasn't reacted, return null instead of throwing error\r\n    if (error.response?.status === 404) {\r\n      return null;\r\n    }\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Export as a single object for convenience\r\nconst reactionsApi = {\r\n  reactToPost,\r\n  removeReaction,\r\n  getPostReactions,\r\n  getUserReactions,\r\n  getUserReaction\r\n};\r\n\r\nexport default reactionsApi;\r\n","import { useState, useEffect } from 'react';\r\nimport { reactToPost, removeReaction, getUserReaction } from '../api/reactions';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport './PostCard.css';\r\n\r\nconst PostCard = ({ post, onComment }) => { // Removed unused 'user' from props\r\n  const [userReaction, setUserReaction] = useState(null);\r\n  const [reactionCounts, setReactionCounts] = useState(post.reactionCounts || {});\r\n  const [showReactionPicker, setShowReactionPicker] = useState(false);\r\n  const [comment, setComment] = useState('');\r\n  const [showComments, setShowComments] = useState(false);\r\n  const { user } = useAuth();\r\n\r\n  const loadUserReaction = async () => {\r\n    try {\r\n      const response = await getUserReaction(post._id);\r\n      setUserReaction(response?.userReaction || null);\r\n    } catch (error) {\r\n      console.error('Error loading user reaction:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserReaction();\r\n  }, [post._id, loadUserReaction]); // Added loadUserReaction to dependencies\r\n\r\n  const handleReaction = async (reactionType) => {\r\n    try {\r\n      if (userReaction === reactionType) {\r\n        await removeReaction(post._id);\r\n        setUserReaction(null);\r\n        setReactionCounts((prev) => ({\r\n          ...prev,\r\n          [reactionType]: Math.max(0, (prev[reactionType] || 0) - 1),\r\n        }));\r\n      } else {\r\n        const response = await reactToPost(post._id, reactionType);\r\n        setUserReaction(reactionType);\r\n        setReactionCounts(response.reactionCounts);\r\n      }\r\n      setShowReactionPicker(false);\r\n    } catch (error) {\r\n      console.error('Error handling reaction:', error);\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (comment.trim()) {\r\n      onComment(post._id, comment.trim());\r\n      setComment('');\r\n    }\r\n  };\r\n\r\n  const getReactionIcon = (type) => {\r\n    switch (type) {\r\n      case 'like':\r\n        return '👍';\r\n      case 'love':\r\n        return '❤️';\r\n      case 'haha':\r\n        return '😄';\r\n      case 'wow':\r\n        return '😲';\r\n      case 'sad':\r\n        return '😢';\r\n      case 'angry':\r\n        return '😠';\r\n      case 'dislike':\r\n        return '👎';\r\n      default:\r\n        return '👍';\r\n    }\r\n  };\r\n\r\n  const getTotalReactions = () => {\r\n    return Object.values(reactionCounts).reduce((sum, count) => sum + count, 0);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    return new Date(date).toLocaleDateString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-card\">\r\n      {/* Post header */}\r\n      <div className=\"post-header\">\r\n        <img\r\n          src={post.user?.profilePicture || '/default-avatar.jpg'}\r\n          alt={post.user?.firstName}\r\n          className=\"post-avatar\"\r\n        />\r\n        <div className=\"post-user-info\">\r\n          <h4>\r\n            {post.user?.firstName} {post.user?.lastName}\r\n          </h4>\r\n          <span className=\"post-time\">{formatDate(post.createdAt)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Post content */}\r\n      <div className=\"post-content\">\r\n        <p>{post.content}</p>\r\n        {post.image && <img src={post.image} alt=\"Post\" className=\"post-image\" />}\r\n      </div>\r\n\r\n      {/* Reaction + comment stats */}\r\n      <div className=\"post-stats\">\r\n        {getTotalReactions() > 0 && <span>{getTotalReactions()} reactions</span>}\r\n        <span>{post.comments.length} comments</span>\r\n      </div>\r\n\r\n      {/* Actions */}\r\n      <div className=\"post-actions\">\r\n        <button\r\n          className={`action-btn ${userReaction ? 'active' : ''}`}\r\n          onMouseEnter={() => setShowReactionPicker(true)}\r\n          onMouseLeave={() => setShowReactionPicker(false)}\r\n          onClick={() => handleReaction('like')}\r\n        >\r\n          {userReaction ? getReactionIcon(userReaction) : '👍'}{' '}\r\n          {userReaction ? 'Reacted' : 'React'}\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => setShowComments(!showComments)}\r\n          className=\"action-btn\"\r\n        >\r\n          💬 Comment\r\n        </button>\r\n\r\n        <button className=\"action-btn\">🔄 Share</button>\r\n      </div>\r\n\r\n      {/* Reaction picker */}\r\n      {showReactionPicker && (\r\n        <div\r\n          className=\"reaction-picker\"\r\n          onMouseEnter={() => setShowReactionPicker(true)}\r\n          onMouseLeave={() => setShowReactionPicker(false)}\r\n        >\r\n          {['like', 'love', 'haha', 'wow', 'sad', 'angry', 'dislike'].map((type) => (\r\n            <button\r\n              key={type}\r\n              className=\"reaction-option\"\r\n              onClick={() => handleReaction(type)}\r\n              title={type.charAt(0).toUpperCase() + type.slice(1)}\r\n            >\r\n              {getReactionIcon(type)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Comments */}\r\n      {showComments && (\r\n        <div className=\"comments-section\">\r\n          <form onSubmit={handleCommentSubmit} className=\"comment-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n              placeholder=\"Write a comment...\"\r\n              className=\"comment-input\"\r\n            />\r\n            <button type=\"submit\" disabled={!comment.trim()}>\r\n              Post\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"comments-list\">\r\n            {post.comments.map((c) => (\r\n              <div key={c._id} className=\"comment\">\r\n                <img\r\n                  src={c.user?.profilePicture || '/default-avatar.jpg'}\r\n                  alt={c.user?.firstName}\r\n                  className=\"comment-avatar\"\r\n                />\r\n                <div className=\"comment-content\">\r\n                  <strong>{c.user?.firstName}</strong>\r\n                  <p>{c.content}</p>\r\n                  <span className=\"comment-time\">{formatDate(c.createdAt)}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","// client/src/components/CreatePost.js\r\nimport { useState } from 'react';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport axios from '../api/axios';\r\nimport './CreatePost.css';\r\n\r\nconst CreatePost = ({ onPostCreated }) => {\r\n  const [content, setContent] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { user } = useAuth();\r\n\r\n  // Handle new image selection\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    const validImages = files.filter((file) => file.type.startsWith('image/'));\r\n    if (validImages.length === 0) return;\r\n\r\n    setImages((prev) => [...prev, ...validImages]);\r\n  };\r\n\r\n  // Remove a specific image\r\n  const removeImage = (index) => {\r\n    setImages((prev) => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Submit post\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('content', content);\r\n      images.forEach((img) => formData.append('images', img));\r\n\r\n      const response = await axios.post('/api/posts', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      if (response.data) {\r\n        setContent('');\r\n        setImages([]);\r\n        if (onPostCreated) {\r\n          onPostCreated(response.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to create post');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-post-card\">\r\n      <div className=\"post-header\">\r\n        <img\r\n          src={user?.profilePicture || '/default-avatar.jpg'}\r\n          alt={user?.firstName}\r\n          className=\"user-avatar\"\r\n        />\r\n        <div className=\"user-info\">\r\n          <h4>{user?.firstName} {user?.lastName}</h4>\r\n          <p>What’s on your mind?</p>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"post-form\">\r\n        <textarea\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"Share something with your community...\"\r\n          maxLength={1000}\r\n          rows={3}\r\n          required\r\n        />\r\n\r\n        {/* Image previews */}\r\n        {images.length > 0 && (\r\n          <div className=\"image-preview-container\">\r\n            {images.map((img, index) => (\r\n              <div key={index} className=\"image-preview\">\r\n                <img\r\n                  src={URL.createObjectURL(img)}\r\n                  alt={`Preview ${index}`}\r\n                  className=\"preview-image\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"remove-image-btn\"\r\n                  onClick={() => removeImage(index)}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        <div className=\"post-actions\">\r\n          <div className=\"action-buttons\">\r\n            <label htmlFor=\"image-upload\" className=\"file-input-label\">\r\n              📷 Add Photos\r\n            </label>\r\n            <input\r\n              id=\"image-upload\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              onChange={handleImageChange}\r\n              className=\"file-input\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading || (!content.trim() && images.length === 0)}\r\n            className=\"post-button\"\r\n          >\r\n            {loading ? 'Posting...' : 'Post'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","// client/src/hooks/useAuth.js\r\nimport { useState, useEffect, createContext, useContext } from 'react';\r\nimport { authAPI } from '../api/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Check authentication status on mount\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const userData = await authAPI.getCurrentUser(token);\r\n        setUser(userData);\r\n      }\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await authAPI.login(credentials);\r\n\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        setUser(response.user);\r\n        return { success: true };\r\n      } else {\r\n        const msg = response.message || 'Login failed';\r\n        setError(msg);\r\n        return { success: false, error: msg };\r\n      }\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || 'Login failed';\r\n      setError(msg);\r\n      return { success: false, error: msg };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await authAPI.register(userData);\r\n\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        setUser(response.user);\r\n        return { success: true };\r\n      } else {\r\n        const msg = response.message || 'Registration failed';\r\n        setError(msg);\r\n        return { success: false, error: msg };\r\n      }\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || 'Registration failed';\r\n      setError(msg);\r\n      return { success: false, error: msg };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        checkAuthStatus,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to access auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":["Feed","posts","setPosts","useState","loading","setLoading","page","setPage","hasMore","setHasMore","error","setError","useEffect","loadFeedPosts","async","pageNum","arguments","length","undefined","response","limit","api","get","concat","data","getFeedPosts","prev","console","_jsx","className","children","_jsxs","CreatePost","onPostCreated","newPost","map","post","PostCard","_id","onClick","handleLoadMore","disabled","axiosInstance","axios","create","baseURL","process","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","_error$response","status","removeItem","window","location","href","baseAxios","reactToPost","postId","reactionType","type","removeReaction","delete","_error$response2","getUserReaction","_error$response5","_error$response6","_ref","_post$user","_post$user2","_post$user3","_post$user4","onComment","userReaction","setUserReaction","reactionCounts","setReactionCounts","showReactionPicker","setShowReactionPicker","comment","setComment","showComments","setShowComments","user","useAuth","loadUserReaction","handleReaction","_objectSpread","Math","max","getReactionIcon","getTotalReactions","Object","values","reduce","sum","count","formatDate","date","Date","toLocaleDateString","hour","minute","src","profilePicture","alt","firstName","lastName","createdAt","content","image","comments","onMouseEnter","onMouseLeave","title","charAt","toUpperCase","slice","onSubmit","e","preventDefault","trim","value","onChange","target","placeholder","c","_c$user","_c$user2","_c$user3","setContent","images","setImages","formData","FormData","append","forEach","img","err","_err$response","_err$response$data","message","maxLength","rows","required","index","URL","createObjectURL","filter","_","i","removeImage","htmlFor","id","accept","multiple","validImages","Array","from","files","file","startsWith","AuthContext","createContext","context","useContext","Error"],"sourceRoot":""}