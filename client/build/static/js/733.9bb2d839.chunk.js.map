{"version":3,"file":"static/js/733.9bb2d839.chunk.js","mappings":"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","sources":["components/ImageUpload.js","pages/Profile.js","utils/socket.js","components/Post.js","components/Loading.js","components/PostList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Button, \r\n  CircularProgress, \r\n  Avatar, \r\n  Box, \r\n  Typography,\r\n  IconButton \r\n} from '@mui/material';\r\nimport { CameraAlt, Check, ErrorOutline, Delete } from '@mui/icons-material';\r\nimport api from '../utils/api';\r\n\r\nexport default function ImageUpload({ \r\n  currentUrl, \r\n  onUploadComplete, \r\n  type = 'profile',\r\n  size = 100,\r\n  disabled = false\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Validate file\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      setError('File size must be less than 5MB');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n      \r\n      const { data } = await api.post(`/uploads/${type}`, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      \r\n      onUploadComplete(data.url);\r\n      setSuccess(true);\r\n      setTimeout(() => setSuccess(false), 3000);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Upload failed. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n      e.target.value = ''; // Reset file input\r\n    }\r\n  };\r\n\r\n  const handleRemove = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await api.delete(`/uploads/${type}`);\r\n      onUploadComplete('');\r\n      setSuccess(true);\r\n      setTimeout(() => setSuccess(false), 3000);\r\n    } catch (err) {\r\n      setError('Failed to remove image');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <Box sx={{ \r\n        position: 'relative',\r\n        width: size,\r\n        height: size,\r\n        mb: 2\r\n      }}>\r\n        <Avatar\r\n          src={currentUrl}\r\n          sx={{ \r\n            width: '100%', \r\n            height: '100%',\r\n            fontSize: size * 0.4\r\n          }}\r\n        >\r\n          {!currentUrl && <CameraAlt fontSize=\"inherit\" />}\r\n        </Avatar>\r\n        \r\n        {loading && (\r\n          <CircularProgress \r\n            size={size * 0.5}\r\n            sx={{\r\n              position: 'absolute',\r\n              top: '50%',\r\n              left: '50%',\r\n              transform: 'translate(-50%, -50%)'\r\n            }}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      <input\r\n        accept=\"image/*\"\r\n        style={{ display: 'none' }}\r\n        id={`${type}-upload-input`}\r\n        type=\"file\"\r\n        onChange={handleUpload}\r\n        disabled={disabled || loading}\r\n      />\r\n      \r\n      <Box sx={{ display: 'flex', gap: 1 }}>\r\n        <label htmlFor={`${type}-upload-input`}>\r\n          <Button\r\n            component=\"span\"\r\n            variant=\"outlined\"\r\n            color={\r\n              error ? 'error' : \r\n              success ? 'success' : \r\n              'primary'\r\n            }\r\n            disabled={disabled || loading}\r\n            startIcon={\r\n              loading ? <CircularProgress size={20} /> :\r\n              success ? <Check /> :\r\n              error ? <ErrorOutline /> :\r\n              <CameraAlt />\r\n            }\r\n          >\r\n            {loading ? 'Processing...' : \r\n             error ? 'Error' : \r\n             success ? 'Success!' : \r\n             currentUrl ? 'Change' : 'Upload'}\r\n          </Button>\r\n        </label>\r\n\r\n        {currentUrl && !disabled && (\r\n          <IconButton\r\n            color=\"error\"\r\n            onClick={handleRemove}\r\n            disabled={loading}\r\n          >\r\n            <Delete />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n\r\n      {error && (\r\n        <Typography color=\"error\" variant=\"caption\" sx={{ mt: 1 }}>\r\n          {error}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  CircularProgress,\r\n  Divider,\r\n} from '@mui/material';\r\nimport {\r\n  Edit,\r\n} from '@mui/icons-material';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport api from '../utils/api';\r\nimport ImageUpload from '../components/ImageUpload';\r\nimport PostList from '../components/PostList';\r\n\r\nexport default function Profile() {\r\n  const { id } = useParams();\r\n  const { user: currentUser = null } = useContext(AuthContext) || {};\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState([]);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    bio: '',\r\n    phone: '',\r\n    profilePicture: '',\r\n    coverPhoto: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [{ data: userData }, { data: postsData }] = await Promise.all([\r\n          api.get(`/users/${id}`),\r\n          api.get(`/posts?userId=${id}`)\r\n        ]);\r\n\r\n        setUser(userData);\r\n        setPosts(postsData);\r\n        setFormData({\r\n          bio: userData.bio || '',\r\n          phone: userData.phone || '',\r\n          profilePicture: userData.profilePicture || '',\r\n          coverPhoto: userData.coverPhoto || ''\r\n        });\r\n      } catch (err) {\r\n        console.error('Failed to fetch profile data', err);\r\n        navigate('/');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id, navigate]);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const { data } = await api.put('/users', formData);\r\n      setUser(data);\r\n      setEditMode(false);\r\n    } catch (err) {\r\n      console.error('Failed to update profile', err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <CircularProgress sx={{ display: 'block', mx: 'auto', mt: 4 }} />;\r\n  if (!user) return <Typography>User not found</Typography>;\r\n\r\n  const isCurrentUser = currentUser?._id === user._id;\r\n\r\n  return (\r\n    <Box sx={{ pb: 4 }}>\r\n      {/* Cover Photo Section */}\r\n      <Box sx={{\r\n        height: 300,\r\n        background:\r\n          formData.coverPhoto\r\n            ? `url(${formData.coverPhoto}) center/cover`\r\n            : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        position: 'relative'\r\n      }}>\r\n        {editMode && (\r\n          <Box sx={{\r\n            position: 'absolute',\r\n            bottom: 16,\r\n            right: 16,\r\n            bgcolor: 'background.paper',\r\n            p: 1,\r\n            borderRadius: 1,\r\n            boxShadow: 3\r\n          }}>\r\n            <ImageUpload\r\n              currentUrl={formData.coverPhoto}\r\n              onUploadComplete={(url) => setFormData({ ...formData, coverPhoto: url })}\r\n              type=\"cover\"\r\n              size={80}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Profile Header */}\r\n      <Box sx={{\r\n        maxWidth: 1200,\r\n        mx: 'auto',\r\n        px: { xs: 2, md: 4 },\r\n        mt: -8,\r\n        position: 'relative'\r\n      }}>\r\n        <Box sx={{\r\n          display: 'flex',\r\n          flexDirection: { xs: 'column', md: 'row' },\r\n          alignItems: { xs: 'center', md: 'flex-end' },\r\n          gap: 3\r\n        }}>\r\n          <Box sx={{\r\n            position: 'relative',\r\n            width: 160,\r\n            height: 160,\r\n            mt: -4\r\n          }}>\r\n            <ImageUpload\r\n              currentUrl={formData.profilePicture}\r\n              onUploadComplete={(url) => setFormData({ ...formData, profilePicture: url })}\r\n              type=\"profile\"\r\n              size={160}\r\n              disabled={!editMode}\r\n            />\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Typography variant=\"h3\" sx={{ fontWeight: 600 }}>\r\n              {user.firstName} {user.lastName}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n              {user.email}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {formData.bio || 'No bio yet'}\r\n            </Typography>\r\n            <Typography variant=\"caption\">\r\n              Joined {new Date(user.createdAt).toLocaleDateString()}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {isCurrentUser && (\r\n            <Button\r\n              startIcon={<Edit />}\r\n              onClick={() => {\r\n                if (editMode) {\r\n                  // cancel changes\r\n                  setFormData({\r\n                    bio: user.bio || '',\r\n                    phone: user.phone || '',\r\n                    profilePicture: user.profilePicture || '',\r\n                    coverPhoto: user.coverPhoto || ''\r\n                  });\r\n                }\r\n                setEditMode(!editMode);\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              {editMode ? 'Cancel' : 'Edit Profile'}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {editMode && (\r\n        <Box sx={{ maxWidth: 600, mx: 'auto', px: 2, mt: 3 }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      <Divider sx={{ my: 4 }} />\r\n\r\n      {/* Tabs Section */}\r\n      <Box sx={{ px: { xs: 2, md: 4 } }}>\r\n        <Tabs value={tabValue} onChange={(e, val) => setTabValue(val)} sx={{ mb: 3 }}>\r\n          <Tab label=\"Posts\" />\r\n          <Tab label=\"Comments\" />\r\n        </Tabs>\r\n\r\n        {tabValue === 0 && <PostList posts={posts} />}\r\n        {tabValue === 1 && (\r\n          <Box sx={{ mt: 3 }}>\r\n            {posts.length === 0 ? (\r\n              <Typography variant=\"body1\">No comments available.</Typography>\r\n            ) : (\r\n              posts.flatMap(post =>\r\n                post.comments\r\n                  ?.filter(comment => comment.user?.username === user.username)\r\n                  .map(comment => (\r\n                    <Box key={comment._id} sx={{ mb: 2, p: 2, border: '1px solid #ddd', borderRadius: 2 }}>\r\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                        On post: {post.content?.substring(0, 50)}...\r\n                      </Typography>\r\n                      <Typography variant=\"body1\">{comment.text}</Typography>\r\n                    </Box>\r\n                  ))\r\n              )\r\n            )}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000', {\r\n  autoConnect: false // Connect manually after auth\r\n});\r\n\r\nexport const connectSocket = (token) => {\r\n  socket.auth = { token };\r\n  socket.connect();\r\n};\r\n\r\nexport default socket;","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  TextField,\r\n  Button\r\n} from '@mui/material';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { motion } from 'framer-motion';\r\nimport socket from '../utils/socket';\r\n\r\nfunction Post({ post }) {\r\n  const { user } = useContext(AuthContext);\r\n  const [likes, setLikes] = useState(post.likes?.length || 0);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  const handleLike = () => {\r\n    setLikes(isLiked ? likes - 1 : likes + 1);\r\n    setIsLiked(!isLiked);\r\n\r\n    // Emit the like event to the server\r\n    socket.emit('like-post', { postId: post._id, userId: user._id });\r\n  };\r\n\r\n  const handleComment = () => {\r\n    if (!commentText.trim()) return;\r\n\r\n    // 🔔 Emit a notification to the post author\r\n    socket.emit('send-notification', {\r\n      userId: post.user._id, // author of the post\r\n      message: `${user.username} commented on your post`\r\n    });\r\n\r\n    // TODO: Call backend API to save comment\r\n    setCommentText('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('post-liked', ({ postId, likesCount }) => {\r\n      if (postId === post._id) {\r\n        setLikes(likesCount);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('post-liked');\r\n    };\r\n  }, [post._id]);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        mb: 3,\r\n        borderRadius: '20px',\r\n        background: 'rgba(255, 255, 255, 0.7)',\r\n        backdropFilter: 'blur(10px)',\r\n        border: '1px solid rgba(255, 255, 255, 0.2)',\r\n        boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',\r\n      }}\r\n    >\r\n      <CardHeader\r\n        avatar={<Avatar src={post.user.avatar || '/default-avatar.png'} />}\r\n        title={post.user.username}\r\n        subheader={formatDistanceToNow(new Date(post.createdAt), { addSuffix: true })}\r\n        action={<IconButton><MoreVertIcon /></IconButton>}\r\n        sx={{ pb: 0 }}\r\n      />\r\n\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"500\"\r\n        image={post.image || '/placeholder.jpg'}\r\n        sx={{\r\n          borderRadius: '15px',\r\n          m: 2,\r\n          boxShadow: '4px 4px 8px #ccc, -4px -4px 8px #fff',\r\n        }}\r\n      />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n          {post.content}\r\n        </Typography>\r\n\r\n        <Divider sx={{ my: 2 }} />\r\n\r\n        <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n          <motion.span\r\n            onClick={handleLike}\r\n            whileTap={{ scale: 1.5 }}\r\n            animate={{ scale: isLiked ? [1, 1.2, 1] : 1 }}\r\n            style={{ display: 'inline-block', cursor: 'pointer' }}\r\n          >\r\n            <FavoriteIcon color={isLiked ? 'error' : 'disabled'} />\r\n          </motion.span>\r\n          <Typography>{likes}</Typography>\r\n          <IconButton>\r\n            <CommentIcon />\r\n          </IconButton>\r\n          <Typography>{post.comments?.length || 0}</Typography>\r\n        </Box>\r\n\r\n        {/* Comment Input Box */}\r\n        <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            size=\"small\"\r\n            placeholder=\"Write a comment...\"\r\n            value={commentText}\r\n            onChange={(e) => setCommentText(e.target.value)}\r\n          />\r\n          <Button variant=\"contained\" onClick={handleComment}>Send</Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import { PulseLoader } from 'react-spinners';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"loading-overlay\">\r\n      <PulseLoader color=\"#36d7b7\" size={15} />\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport api from '../utils/api';\r\nimport Post from './Post';\r\nimport Loading from './Loading'; // ⬅️ Import the loading spinner\r\n\r\nexport default function PostList() {\r\n  const { user } = useContext(AuthContext);\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true); // ⬅️ Loading state\r\n\r\n  // 🌐 Fetch posts on mount\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await api.get('/posts');\r\n        setPosts(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching posts:', err);\r\n      } finally {\r\n        setLoading(false); // ✅ Done loading\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // 🔁 Refresh posts after likes/comments\r\n  const refreshPosts = async () => {\r\n    try {\r\n      const res = await api.get('/posts');\r\n      setPosts(res.data);\r\n    } catch (err) {\r\n      console.error('Error refreshing posts:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <Loading />; // ⬅️ Show spinner while loading\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      {posts.map((post) => (\r\n        <Post \r\n          key={post._id} \r\n          post={post} \r\n          currentUser={user}\r\n          onInteraction={refreshPosts} \r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["ImageUpload","_ref","currentUrl","onUploadComplete","type","size","disabled","loading","setLoading","useState","error","setError","success","setSuccess","_jsxs","Box","sx","display","flexDirection","alignItems","children","position","width","height","mb","_jsx","Avatar","src","fontSize","CameraAlt","CircularProgress","top","left","transform","accept","style","id","onChange","async","file","e","target","files","formData","FormData","append","data","api","post","headers","url","setTimeout","err","_err$response","_err$response$data","response","message","value","gap","htmlFor","Button","component","variant","color","startIcon","Check","ErrorOutline","IconButton","onClick","delete","Delete","Typography","mt","Profile","useParams","user","currentUser","useContext","AuthContext","setUser","posts","setPosts","tabValue","setTabValue","editMode","setEditMode","setFormData","bio","phone","profilePicture","coverPhoto","navigate","useNavigate","useEffect","userData","postsData","Promise","all","get","console","fetchData","mx","isCurrentUser","_id","pb","background","bottom","right","bgcolor","p","borderRadius","boxShadow","maxWidth","px","xs","md","flexGrow","fontWeight","firstName","lastName","email","Date","createdAt","toLocaleDateString","Edit","put","Divider","my","Tabs","val","Tab","label","PostList","length","flatMap","_post$comments","comments","filter","comment","_comment$user","username","map","_post$content","border","content","substring","text","socket","io","autoConnect","_post$likes","likes","setLikes","isLiked","setIsLiked","commentText","setCommentText","on","_ref2","postId","likesCount","off","Card","backdropFilter","CardHeader","avatar","title","subheader","formatDistanceToNow","addSuffix","action","MoreVertIcon","CardMedia","image","m","CardContent","motion","span","handleLike","emit","userId","whileTap","scale","animate","cursor","FavoriteIcon","CommentIcon","TextField","fullWidth","placeholder","handleComment","trim","Loading","className","PulseLoader","res","fetchPosts","refreshPosts","Post","onInteraction"],"sourceRoot":""}