{"version":3,"file":"static/js/983.eac5e6e1.chunk.js","mappings":"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","sources":["api/axios.js","hooks/useAuth.js","pages/Login.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\n// Request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;","// client/src/hooks/useAuth.js\r\nimport { useState, useEffect, createContext, useContext } from 'react';\r\nimport { authAPI } from '../api/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Check authentication status on mount\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const userData = await authAPI.getCurrentUser(token);\r\n        setUser(userData);\r\n      }\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await authAPI.login(credentials);\r\n\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        setUser(response.user);\r\n        return { success: true };\r\n      } else {\r\n        const msg = response.message || 'Login failed';\r\n        setError(msg);\r\n        return { success: false, error: msg };\r\n      }\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || 'Login failed';\r\n      setError(msg);\r\n      return { success: false, error: msg };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await authAPI.register(userData);\r\n\r\n      if (response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        setUser(response.user);\r\n        return { success: true };\r\n      } else {\r\n        const msg = response.message || 'Registration failed';\r\n        setError(msg);\r\n        return { success: false, error: msg };\r\n      }\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || 'Registration failed';\r\n      setError(msg);\r\n      return { success: false, error: msg };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        checkAuthStatus,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to access auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n","// client/src/pages/Login.js\r\nimport { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport axios from '../api/axios';\r\nimport { toast } from 'react-toastify'; // ✅ Toast notifications\r\nimport './Auth.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post('/auth/login', formData);\r\n\r\n      if (response.data.status === 'success') {\r\n        login(response.data.data.user, response.data.token);\r\n        toast.success('✅ Logged in successfully!');\r\n        navigate('/dashboard', { replace: true });\r\n      }\r\n    } catch (err) {\r\n      console.error('❌ Login failed:', err);\r\n      toast.error(err.response?.data?.message || '❌ Invalid credentials');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Welcome Back</h2>\r\n        <p>Sign in to your account</p>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email Address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n              minLength=\"6\"\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-button\" disabled={loading}>\r\n            {loading ? 'Signing in...' : 'Sign In'}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"auth-footer\">\r\n          <p>\r\n            Don't have an account?{' '}\r\n            <Link to=\"/register\" className=\"auth-link\">\r\n              Sign up here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["axiosInstance","axios","create","baseURL","process","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthContext","createContext","useAuth","context","useContext","Error","Login","formData","setFormData","useState","email","password","loading","setLoading","login","navigate","useNavigate","handleChange","e","_objectSpread","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","post","data","user","toast","success","replace","err","_err$response","_err$response$data","console","message","type","placeholder","onChange","required","minLength","disabled","Link","to"],"sourceRoot":""}