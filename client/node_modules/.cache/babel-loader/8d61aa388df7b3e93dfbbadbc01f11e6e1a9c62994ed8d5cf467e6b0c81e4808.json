{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shori\\\\social-platform\\\\client\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Box } from '@mui/material';\nimport { AuthContext } from '../context/AuthContext';\nimport api from '../utils/api';\nimport Post from './Post'; // ⬅️ Import the dedicated Post component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostList() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n\n  // 🌐 Fetch posts on mount\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await api.get('/posts');\n        setPosts(res.data);\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  // 🔁 Refresh posts after likes/comments\n  const refreshPosts = async () => {\n    try {\n      const res = await api.get('/posts');\n      setPosts(res.data);\n    } catch (err) {\n      console.error('Error refreshing posts:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      currentUser: user,\n      onInteraction: refreshPosts // 🔄 callback for likes/comments\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"4WNCxz+4P2TcM/gd08rAtk1EWA0=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Box","AuthContext","api","Post","jsxDEV","_jsxDEV","PostList","_s","user","posts","setPosts","fetchPosts","res","get","data","err","console","error","refreshPosts","sx","mt","children","map","post","currentUser","onInteraction","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shori/social-platform/client/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport api from '../utils/api';\r\nimport Post from './Post'; // ⬅️ Import the dedicated Post component\r\n\r\nexport default function PostList() {\r\n  const { user } = useContext(AuthContext);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // 🌐 Fetch posts on mount\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await api.get('/posts');\r\n        setPosts(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching posts:', err);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // 🔁 Refresh posts after likes/comments\r\n  const refreshPosts = async () => {\r\n    try {\r\n      const res = await api.get('/posts');\r\n      setPosts(res.data);\r\n    } catch (err) {\r\n      console.error('Error refreshing posts:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      {posts.map((post) => (\r\n        <Post \r\n          key={post._id} \r\n          post={post} \r\n          currentUser={user}\r\n          onInteraction={refreshPosts} // 🔄 callback for likes/comments\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,GAAG,MAAM,cAAc;AAC9B,OAAOC,IAAI,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAK,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,QAAQ,CAAC;QACnCH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC7C;IACF,CAAC;IACDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMN,GAAG,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,QAAQ,CAAC;MACnCH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C;EACF,CAAC;EAED,oBACEV,OAAA,CAACL,GAAG;IAACmB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,EAChBZ,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdlB,OAAA,CAACF,IAAI;MAEHoB,IAAI,EAAEA,IAAK;MACXC,WAAW,EAAEhB,IAAK;MAClBiB,aAAa,EAAEP,YAAa,CAAC;IAAA,GAHxBK,IAAI,CAACG,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CAvCuBD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}