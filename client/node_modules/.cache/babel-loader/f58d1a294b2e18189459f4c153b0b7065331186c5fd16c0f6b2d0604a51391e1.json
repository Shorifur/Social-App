{"ast":null,"code":"import React,{useEffect,useState,useContext}from'react';import{Box}from'@mui/material';import{AuthContext}from'../context/AuthContext';import api from'../utils/api';import Post from'./Post';// ⬅️ Import the dedicated Post component\nimport{jsx as _jsx}from\"react/jsx-runtime\";export default function PostList(){const{user}=useContext(AuthContext);const[posts,setPosts]=useState([]);// 🌐 Fetch posts on mount\nuseEffect(()=>{const fetchPosts=async()=>{try{const res=await api.get('/posts');setPosts(res.data);}catch(err){console.error('Error fetching posts:',err);}};fetchPosts();},[]);// 🔁 Refresh posts after likes/comments\nconst refreshPosts=async()=>{try{const res=await api.get('/posts');setPosts(res.data);}catch(err){console.error('Error refreshing posts:',err);}};return/*#__PURE__*/_jsx(Box,{sx:{mt:2},children:posts.map(post=>/*#__PURE__*/_jsx(Post,{post:post,currentUser:user,onInteraction:refreshPosts// 🔄 callback for likes/comments\n},post._id))});}","map":{"version":3,"names":["React","useEffect","useState","useContext","Box","AuthContext","api","Post","jsx","_jsx","PostList","user","posts","setPosts","fetchPosts","res","get","data","err","console","error","refreshPosts","sx","mt","children","map","post","currentUser","onInteraction","_id"],"sources":["C:/Users/shori/social-platform/client/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport api from '../utils/api';\r\nimport Post from './Post'; // ⬅️ Import the dedicated Post component\r\n\r\nexport default function PostList() {\r\n  const { user } = useContext(AuthContext);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // 🌐 Fetch posts on mount\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await api.get('/posts');\r\n        setPosts(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching posts:', err);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // 🔁 Refresh posts after likes/comments\r\n  const refreshPosts = async () => {\r\n    try {\r\n      const res = await api.get('/posts');\r\n      setPosts(res.data);\r\n    } catch (err) {\r\n      console.error('Error refreshing posts:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2 }}>\r\n      {posts.map((post) => (\r\n        <Post \r\n          key={post._id} \r\n          post={post} \r\n          currentUser={user}\r\n          onInteraction={refreshPosts} // 🔄 callback for likes/comments\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC9D,OAASC,GAAG,KAAQ,eAAe,CACnC,OAASC,WAAW,KAAQ,wBAAwB,CACpD,MAAO,CAAAC,GAAG,KAAM,cAAc,CAC9B,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAE3B,cAAe,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACjC,KAAM,CAAEC,IAAK,CAAC,CAAGR,UAAU,CAACE,WAAW,CAAC,CACxC,KAAM,CAACO,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAT,GAAG,CAACU,GAAG,CAAC,QAAQ,CAAC,CACnCH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC,CACpB,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAC7C,CACF,CAAC,CACDJ,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAO,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAN,GAAG,CAAG,KAAM,CAAAT,GAAG,CAACU,GAAG,CAAC,QAAQ,CAAC,CACnCH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC,CACpB,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEF,GAAG,CAAC,CAC/C,CACF,CAAC,CAED,mBACET,IAAA,CAACL,GAAG,EAACkB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,CAChBZ,KAAK,CAACa,GAAG,CAAEC,IAAI,eACdjB,IAAA,CAACF,IAAI,EAEHmB,IAAI,CAAEA,IAAK,CACXC,WAAW,CAAEhB,IAAK,CAClBiB,aAAa,CAAEP,YAAc;AAAA,EAHxBK,IAAI,CAACG,GAIX,CACF,CAAC,CACC,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}