{"ast":null,"code":"import axios from'axios';const api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// 🔐 Attach token to every request\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// ⚠️ Handle global errors (e.g., auto-logout on 401)\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});// 📝 Get comments (Axios)\nexport const getComments=async postId=>{const res=await api.get(`/posts/${postId}/comments`);return res.data;};// 🗨️ Create comment (Axios)\nexport const createComment=async(postId,text)=>{const res=await api.post(`/posts/${postId}/comments`,{text});return res.data;};// 👍 Like a post\nexport const likePost=async postId=>{const res=await api.post(`/posts/${postId}/like`);return res.data;};// 🆕 Create a post\nexport const createPost=async content=>{const res=await api.post('/posts',{content});return res.data;};// 🗨️ Alternative: Add comment (native fetch)\nexport const addComment=async(postId,text)=>{const res=await fetch(`/api/comments/${postId}`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')}`},body:JSON.stringify({text})});return await res.json();};// 📝 Alternative: Get comments (native fetch)\nexport const getCommentsFetch=async postId=>{const res=await fetch(`/api/comments/${postId}`);return await res.json();};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","getComments","postId","res","get","data","createComment","text","post","likePost","createPost","content","addComment","fetch","method","body","JSON","stringify","json","getCommentsFetch"],"sources":["C:/Users/shori/social-platform/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 🔐 Attach token to every request\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// ⚠️ Handle global errors (e.g., auto-logout on 401)\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 📝 Get comments (Axios)\r\nexport const getComments = async (postId) => {\r\n  const res = await api.get(`/posts/${postId}/comments`);\r\n  return res.data;\r\n};\r\n\r\n// 🗨️ Create comment (Axios)\r\nexport const createComment = async (postId, text) => {\r\n  const res = await api.post(`/posts/${postId}/comments`, { text });\r\n  return res.data;\r\n};\r\n\r\n// 👍 Like a post\r\nexport const likePost = async (postId) => {\r\n  const res = await api.post(`/posts/${postId}/like`);\r\n  return res.data;\r\n};\r\n\r\n// 🆕 Create a post\r\nexport const createPost = async (content) => {\r\n  const res = await api.post('/posts', { content });\r\n  return res.data;\r\n};\r\n\r\n// 🗨️ Alternative: Add comment (native fetch)\r\nexport const addComment = async (postId, text) => {\r\n  const res = await fetch(`/api/comments/${postId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    },\r\n    body: JSON.stringify({ text })\r\n  });\r\n  return await res.json();\r\n};\r\n\r\n// 📝 Alternative: Get comments (native fetch)\r\nexport const getCommentsFetch = async (postId) => {\r\n  const res = await fetch(`/api/comments/${postId}`);\r\n  return await res.json();\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}