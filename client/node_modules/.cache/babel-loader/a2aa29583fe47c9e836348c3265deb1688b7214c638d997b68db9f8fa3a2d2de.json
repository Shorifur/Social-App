{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 🔐 Attach token to every request\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// ⚠️ Handle global errors (e.g., auto-logout on 401)\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// 📝 Get comments (Axios)\nexport const getComments = async postId => {\n  const res = await api.get(`/posts/${postId}/comments`);\n  return res.data;\n};\n\n// 🗨️ Create comment (Axios)\nexport const createComment = async (postId, text) => {\n  const res = await api.post(`/posts/${postId}/comments`, {\n    text\n  });\n  return res.data;\n};\n\n// 👍 Like a post\nexport const likePost = async postId => {\n  const res = await api.post(`/posts/${postId}/like`);\n  return res.data;\n};\n\n// 🆕 Create a post\nexport const createPost = async content => {\n  const res = await api.post('/posts', {\n    content\n  });\n  return res.data;\n};\n\n// 🗨️ Alternative: Add comment (native fetch)\nexport const addComment = async (postId, text) => {\n  const res = await fetch(`/api/comments/${postId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    },\n    body: JSON.stringify({\n      text\n    })\n  });\n  return await res.json();\n};\n\n// 📝 Alternative: Get comments (native fetch)\nexport const getCommentsFetch = async postId => {\n  const res = await fetch(`/api/comments/${postId}`);\n  return await res.json();\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","getComments","postId","res","get","data","createComment","text","post","likePost","createPost","content","addComment","fetch","method","body","JSON","stringify","json","getCommentsFetch"],"sources":["C:/Users/shori/social-platform/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 🔐 Attach token to every request\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// ⚠️ Handle global errors (e.g., auto-logout on 401)\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 📝 Get comments (Axios)\r\nexport const getComments = async (postId) => {\r\n  const res = await api.get(`/posts/${postId}/comments`);\r\n  return res.data;\r\n};\r\n\r\n// 🗨️ Create comment (Axios)\r\nexport const createComment = async (postId, text) => {\r\n  const res = await api.post(`/posts/${postId}/comments`, { text });\r\n  return res.data;\r\n};\r\n\r\n// 👍 Like a post\r\nexport const likePost = async (postId) => {\r\n  const res = await api.post(`/posts/${postId}/like`);\r\n  return res.data;\r\n};\r\n\r\n// 🆕 Create a post\r\nexport const createPost = async (content) => {\r\n  const res = await api.post('/posts', { content });\r\n  return res.data;\r\n};\r\n\r\n// 🗨️ Alternative: Add comment (native fetch)\r\nexport const addComment = async (postId, text) => {\r\n  const res = await fetch(`/api/comments/${postId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n    },\r\n    body: JSON.stringify({ text }),\r\n  });\r\n  return await res.json();\r\n};\r\n\r\n// 📝 Alternative: Get comments (native fetch)\r\nexport const getCommentsFetch = async (postId) => {\r\n  const res = await fetch(`/api/comments/${postId}`);\r\n  return await res.json();\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}