{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useState,useEffect}from'react';import api from'../utils/api';// your axios or fetch wrapper\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext({user:null,loading:true,login:async()=>{},logout:()=>{}});export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Async initialization on mount to check token and fetch user data\nuseEffect(()=>{const initializeAuth=async()=>{try{const token=localStorage.getItem('token');if(token){// Optionally set token on your api headers here\napi.defaults.headers.common['Authorization']=`Bearer ${token}`;// Fetch user data\nconst{data}=await api.get('/auth/me');// your endpoint to get current user\nsetUser(data);}}catch(error){console.error('Failed to initialize auth:',error);setUser(null);}finally{setLoading(false);}};initializeAuth();},[]);// Login function example\nconst login=async credentials=>{setLoading(true);try{const{data}=await api.post('/auth/login',credentials);localStorage.setItem('token',data.token);api.defaults.headers.common['Authorization']=`Bearer ${data.token}`;setUser(data.user);}catch(error){throw error;}finally{setLoading(false);}};// Logout function example\nconst logout=()=>{localStorage.removeItem('token');delete api.defaults.headers.common['Authorization'];setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsx","_jsx","AuthContext","user","loading","login","logout","AuthProvider","_ref","children","setUser","setLoading","initializeAuth","token","localStorage","getItem","defaults","headers","common","data","get","error","console","credentials","post","setItem","removeItem","Provider","value"],"sources":["C:/Users/shori/social-platform/client/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api'; // your axios or fetch wrapper\r\n\r\nexport const AuthContext = createContext({\r\n  user: null,\r\n  loading: true,\r\n  login: async () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Async initialization on mount to check token and fetch user data\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          // Optionally set token on your api headers here\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n          // Fetch user data\r\n          const { data } = await api.get('/auth/me'); // your endpoint to get current user\r\n          setUser(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to initialize auth:', error);\r\n        setUser(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Login function example\r\n  const login = async (credentials) => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await api.post('/auth/login', credentials);\r\n      localStorage.setItem('token', data.token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\r\n      setUser(data.user);\r\n    } catch (error) {\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function example\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,GAAG,KAAM,cAAc,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEhC,MAAO,MAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CACvCO,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,KAAAA,CAAA,GAAY,CAAC,CAAC,CACrBC,MAAM,CAAEA,CAAA,GAAM,CAAC,CACjB,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACL,IAAI,CAAEO,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACO,OAAO,CAAEO,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT;AACAd,GAAG,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CAAG,UAAUL,KAAK,EAAE,CAEhE;AACA,KAAM,CAAEM,IAAK,CAAC,CAAG,KAAM,CAAApB,GAAG,CAACqB,GAAG,CAAC,UAAU,CAAC,CAAE;AAC5CV,OAAO,CAACS,IAAI,CAAC,CACf,CACF,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDX,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CACDC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAP,KAAK,CAAG,KAAO,CAAAkB,WAAW,EAAK,CACnCZ,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAEQ,IAAK,CAAC,CAAG,KAAM,CAAApB,GAAG,CAACyB,IAAI,CAAC,aAAa,CAAED,WAAW,CAAC,CAC3DT,YAAY,CAACW,OAAO,CAAC,OAAO,CAAEN,IAAI,CAACN,KAAK,CAAC,CACzCd,GAAG,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CAAG,UAAUC,IAAI,CAACN,KAAK,EAAE,CACrEH,OAAO,CAACS,IAAI,CAAChB,IAAI,CAAC,CACpB,CAAE,MAAOkB,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CAAC,OAAS,CACRV,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAL,MAAM,CAAGA,CAAA,GAAM,CACnBQ,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC,CAChC,MAAO,CAAA3B,GAAG,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACnDR,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACET,IAAA,CAACC,WAAW,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEzB,IAAI,CAAEC,OAAO,CAAEC,KAAK,CAAEC,MAAO,CAAE,CAAAG,QAAA,CAC3DA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}